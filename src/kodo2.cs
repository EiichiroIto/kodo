'From MIT Squeak 0.9.4 (June 1, 2003) [No updates present.] on 31 July 2018 at 9:45:54 pm'!Morph subclass: #ScratchConsoleMorph	instanceVariableNames: 'textMorph '	classVariableNames: ''	poolDictionaries: ''	category: 'Scratch-UI-Panes'!ScriptableScratchMorph subclass: #ScratchStageMorph	instanceVariableNames: 'zoom hPan vPan penTrailsForm lastPenPositions runningBlocks inProcessStep sensorBoard midiPortNum midiPort notePlayerDict obsoleteSavedState sprites scratchServer isQuarterSize cachedForm showMotorBlocks console '	classVariableNames: ''	poolDictionaries: ''	category: 'Scratch-Objects'!Object subclass: #ScratchTheme	instanceVariableNames: 'colors forms '	classVariableNames: 'AvailableThemes CurrentTheme '	poolDictionaries: ''	category: 'Scratch-UI-Support'!!BlockMorph methodsFor: 'event handling' stamp: 'EiichiroIto 8/1/2018 19:19'!rightButtonMenu	| menu |	menu _ CustomMenu new.	"menu add: 'help' action: #presentHelpScreen."	(owner isKindOf: ScratchBlockPaletteMorph) ifFalse: [		menu addLine.		menu add: 'duplicate' action: #duplicate.			(self owner isKindOf: BlockMorph) ifFalse: [  "we can't yet delete a blocks inside a script"			menu add: 'delete' action: #delete]].	DebugMenu ifTrue: [		menu addLine.		menu add: 'show tuples' action: #showTuples].		menu localize; invokeOn: self.! !!CommandBlockMorph methodsFor: 'menus' stamp: 'EiichiroIto 8/1/2018 19:19'!rightButtonMenu	| menu sFrame choice spec |	menu _ CustomMenu new.	"menu add: 'help' action: #presentHelpScreen."	(owner isKindOf: ScratchBlockPaletteMorph) ifFalse: [		menu addLine.		(#(+ - * / \\) includes: selector) ifTrue: [			#(+ - * / mod) with: #(+ - * / \\) do: [:s :op | menu add: s action: op]].		(#(< = >) includes: selector) ifTrue: [			#(< = >) do: [:op | menu add: op action: op]].		(#(& |) includes: selector) ifTrue: [			#(and or) with: #(& |) do: [:s :op | menu add: s action: op]].		menu addLine.		menu add: 'duplicate' action: #duplicate.		(self owner isKindOf: BlockMorph) ifFalse: [  "can't yet delete a blocks inside a script"			menu add: 'delete' action: #delete]].	sFrame _ self ownerThatIsA: ScratchFrameMorph.	(sFrame notNil and: [#(sensor: sensorPressed:) includes: selector]) ifTrue: [		menu addLine.		menu add: 'show ScratchBoard watcher' action: #showSensorBoard.		sFrame workPane scratchServer			ifNil: [menu add: 'enable remote sensor connections' action: #enableRemoteSensors]			ifNotNil: [menu add: 'disable remote sensor connections' action: #exitScratchSession]].	DebugMenu ifTrue: [		menu addLine.		menu add: 'show tuples' action: #showTuples].		(choice _ menu localize; startUp) ifNil: [^ self].	(#(presentHelpScreen duplicate delete) includes: choice) ifTrue: [^ self perform: choice].	choice = #showSensorBoard ifTrue: [sFrame showSensorBoard. ^ self].	choice = #enableRemoteSensors ifTrue: [sFrame enableRemoteSensors. ^ self].	choice = #exitScratchSession ifTrue: [sFrame exitScratchSession. ^ self].	choice = #showTuples ifTrue: [^ self showTuples].	"change operator"	spec _ '%n ', choice, ' %n'.	'\\' = choice	ifTrue: [spec _ ScratchTranslator translationFor: '%n mod %n'].	'&' = choice	ifTrue: [spec _ ScratchTranslator translationFor: '%b and %b'].	'|' = choice	ifTrue: [spec _ ScratchTranslator translationFor: '%b or %b'].	self commandSpec: spec.	self selector: choice.! !!DialogBoxMorph methodsFor: 'accessing' stamp: 'EiichiroIto 8/1/2018 19:19'!shortcutButtonLabel: labelString action: actionSelector icon: aSymbol	"Answer a new shortcut button with the given label and selector. A shortcut button has a folder icon on it. The button target will be me and it will use my button forms. Icon can be: #folderIcon, #folderCatIcon, #folderHouseIcon #folderPicIcon, #folderSoundIcon"	"(DialogBoxMorph new shortcutButtonLabel: 'Yes' action: #beep isCat: true) openInWorld"	| onForm offForm overForm button |	onForm _ ScratchFrameMorph skinAt: #dialogButtonFrameOver.	offForm _ ScratchFrameMorph skinAt: #dialogButtonFrame.	overForm _ ScratchFrameMorph skinAt: #dialogButtonFrameOver.	button _ ResizableToggleButton2 new		offForm: offForm		onForm: onForm.	button addMorph: (ImageMorph new form: (ScratchFrameMorph skinAt: aSymbol)).	^ (button		label: labelString localized font: (ScratchFrameMorph getFont: #FolderShortcut);		target: self;		actionSelector: actionSelector;		labelColorOn: ScratchFrameMorph labelOnColor labelColorOff: ScratchFrameMorph labelOffColor labelColorOver: ScratchFrameMorph labelOffColor).! !!DialogBoxMorph methodsFor: 'accessing' stamp: 'EiichiroIto 8/1/2018 19:19'!title: aString	"Note: Title is actually two StringMorphs with the same contents and font: a gray shadow of the text with a white submorph of the same text, offset by a small amount."	titleBin ifNotNil: [titleBin delete].	titleBin removeAllMorphs.	titleMorph ifNotNil: [titleMorph delete].	titleMorph _ ShadowedStringMorph new		contents: aString localized		color: ScratchFrameMorph dialogBoxTitleColor		font: (ScratchFrameMorph getFont: #DialogBoxTitle)		kern: 1.	titleBin		addMorph: (AlignmentMorph newSpacer: Color transparent);		addMorph: (Morph new extent: (5@5); color: Color transparent);		addMorph: titleMorph;		addMorph: (AlignmentMorph newSpacer: Color transparent).	self addMorphBack: titleBin.	self changed.! !!DialogBoxMorph methodsFor: 'interaction' stamp: 'EiichiroIto 8/1/2018 19:19'!message: aMessage font: aStrikeFont	"Set and position my message/question text."	| lines m |	messageLineMorphs ifNotNil: [		messageLineMorphs submorphsDo: [:lineM | lineM delete]].	messageLineMorphs _ AlignmentMorph newColumn		color: Color transparent;		hResizing: #shrinkWrap;		vResizing: #shrinkWrap;		centering: #center.	lines _ aMessage lines.	1 to: lines size do: [:n |		m _ StringMorph			contents: (lines at: n)			font: aStrikeFont.		m color: ScratchFrameMorph dialogBoxTextColor.		messageLineMorphs addMorphBack: m].	mainColumn addMorph: messageLineMorphs.	self changed.! !!DialogBoxMorph methodsFor: 'private' stamp: 'EiichiroIto 8/1/2018 19:19'!buttonLabel: labelString action: actionSelector	"Answer a new button with the given label and selector. The button target will be me and it will use my button forms."	"(DialogBoxMorph new buttonLabel: 'Yes' action: #beep) openInWorld"	| onForm offForm button overForm |	onForm _ ScratchFrameMorph skinAt: #dialogButtonFrameOver.	offForm _ ScratchFrameMorph skinAt: #dialogButtonFrame.	overForm _ ScratchFrameMorph skinAt: #dialogButtonFrame.	button _ ResizableToggleButton2 new		offForm: offForm		onForm: onForm		overForm: overForm.	^ button		padding: 39@22;		label: labelString font: (ScratchFrameMorph getFont: #DialogBoxButton);		target: self;		actionSelector: actionSelector;		labelColorOn: ScratchFrameMorph labelOnColor labelColorOff: ScratchFrameMorph labelOffColor labelColorOver: ScratchFrameMorph labelOffColor! !!ExpressionArgMorph methodsFor: 'initialization' stamp: 'EiichiroIto 8/1/2018 19:19'!initialize	super initialize.	isNumber _ true.	self borderWidth: 1.	self borderInset.	self color: ScratchFrameMorph blockArgColor.	self extent: 25 @ 12.	labelMorph _ StringFieldMorph new forExpressionArg; doResizing: true; font: (ScratchFrameMorph getFont: #Arg); color: Color transparent.	self addMorph: labelMorph.	self numExpression: '10'! !!ExpressionArgMorph methodsFor: 'drawing' stamp: 'EiichiroIto 8/1/2018 19:19'!drawOn: aCanvas 	| darkerC right topY bottomY radius xInset c c2 |	isNumber ifFalse: [^ super drawOn: aCanvas].	c2 := self color.	darkerC _ c2 darker.	right _ self width.	topY _ bottomY _ radius _ self height // 2.	self height even ifTrue: [topY _ bottomY - 1].	[topY >= 0] whileTrue: [		xInset _ radius - (radius squared - (radius - topY - 1) squared) sqrt rounded.		self drawHLineFrom: xInset to: (xInset + 1) y: topY color: darkerC on: aCanvas.		c _ (topY < 1) ifTrue: [darkerC] ifFalse: [c2].		self drawHLineFrom: xInset + 1 to: right - (xInset + 1) y: topY color: c on: aCanvas.		self drawHLineFrom: (right - (xInset + 1)) to: (right - xInset) y: topY color: darkerC on: aCanvas.		self drawHLineFrom: xInset to: right - xInset y: bottomY color: c2 on: aCanvas.		xInset = 0 ifTrue: [			self drawHLineFrom: xInset + 1 to: xInset + 2 y: topY color: c2 on: aCanvas.			self drawHLineFrom: xInset to: xInset + 1 y: bottomY color: darkerC on: aCanvas.			self drawHLineFrom: (right - (xInset + 1)) to: (right - xInset) y: bottomY color: darkerC on: aCanvas].		bottomY _ bottomY + 1.		topY _ topY - 1].! !!LibraryItemMorph methodsFor: 'accessing' stamp: 'EiichiroIto 8/1/2018 19:19'!highlight: aBoolean	| labelColor |	isSelected = aBoolean ifTrue: [^ self].	isSelected _ aBoolean.	isSelected		ifTrue: [			rolloverOn _ false.			highlightForm extent: self extent.			currentForm _ highlightForm.			self addMorphBack: (currentForm position: (self position + (0@0))).			labelColor _ ScratchFrameMorph labelOnColor]		ifFalse: [			currentForm ifNotNil: [				currentForm delete.				currentForm _ nil].			labelColor _ ScratchFrameMorph labelOffColor].	nameMorph color: labelColor.	"scriptCountMorph color: labelColor darker."	self changed.! !!MediaItemMorph methodsFor: 'initialization' stamp: 'EiichiroIto 8/1/2018 19:19'!buildRightSideMorph	"Answers the part of MediaItemMorph that includes the label, the edit/copy or record/play buttons, etc. This includes everything but the sprite image, the number, and the horizontal divider."	| e c bottom |	rightMorph _ Morph new.	rightMorph color: (Color transparent).	nameMorph _ UpdatingStringFieldMorph new		acceptWhenFocusLost: true;		font: (ScratchFrameMorph getFont: #UpdatingStringField);		rightJustify: ScratchTranslator isRTL;		getSelector: #mediaName;		putSelector: #mediaName:;		position: (0@0);		target: self.	nameMorph width: (5 * nameMorph height) asInteger.	rightMorph addMorphBack: nameMorph.	infoMorph _ (StringMorph contents: (media infoString))		font: (ScratchFrameMorph getFont: #MediaItemInfo);		position: nameMorph left + 2 @ (nameMorph bottom).	infoMorph color: ScratchFrameMorph textColor.	rightMorph addMorph: infoMorph.	media isSound		ifTrue: [			self addPlayButton.			playButton position: (nameMorph left)@(infoMorph bottom + 5).			self addStopButton.			stopButton position: playButton topRight + (5@0).			deleteButton _ self getDeleteButton.			rightMorph addMorph: deleteButton.			deleteButton left: stopButton right + 5.			bottom _ stopButton bottom.		] ifFalse: [			e _ self getEditButton.			rightMorph addMorph: e.			e position: nameMorph left@(infoMorph bottom + 5).			c _ self getCopyButton.			rightMorph addMorph: c.			c position: e topRight + (5@0).			deleteButton _ self getDeleteButton.			rightMorph addMorph: deleteButton.			deleteButton position: c right + 5.			bottom _ c bottom].	nameMorph extent: (deleteButton right max: nameMorph width)@(nameMorph extent y).	deleteButton position: (nameMorph right - deleteButton width)@(infoMorph bottom + 6).	soundSizeMorph _ (StringMorph contents: '')		font: (ScratchFrameMorph getFont: #MediaItemInfo);		position: nameMorph right @ nameMorph bottom.	soundSizeMorph color: ScratchFrameMorph textColor.	rightMorph addMorph: soundSizeMorph.	soundSizeMorph		contents: media mediaSizeInKilobytes asString , ' KB';		position: ((nameMorph right - soundSizeMorph width) @ nameMorph bottom).	rightMorph extent: nameMorph width@bottom.! !!MediaItemMorph methodsFor: 'event handling' stamp: 'EiichiroIto 8/1/2018 19:19'!step		Sensor anyButtonPressed ifTrue: [^ self].	media isSound ifTrue: [		(media sound notNil and: [media sound isPlaying])			ifTrue: [				thumbnailMorph form: SoundIconOn.				infoMorph contents: media sound currentPosition hhmmss.				infoMorph color: Color white.				playButton on. 				stopButton off]			ifFalse: [				thumbnailMorph form: SoundIcon.				infoMorph contents: media infoString.				infoMorph color: ScratchFrameMorph textColor.				playButton off. 				stopButton off]].! !!NewVariableDialog methodsFor: 'initialization' stamp: 'EiichiroIto 8/1/2018 19:19'!initialize	| label1 label2 |	super initialize.	spriteSpecificFlag _ false.	radioButtons _ AlignmentMorph newRow		color: Color transparent;		hResizing: #shrinkWrap;		vResizing: #shrinkWrap.	allSpritesRadioButton _ ToggleButton		onForm: (ScratchFrameMorph skinAt: #radioButtonOn)		offForm: (ScratchFrameMorph skinAt: #radioButton).	allSpritesRadioButton		on;		target: self;		actionSelector: #toggleSpriteSpecific.	label1 _ StringMorph new		contents: ('For all sprites' localized);		font: (ScratchFrameMorph getFont: #NewVariableDialogBox).	label1 color: ScratchFrameMorph dialogBoxTextColor.	radioButtons addMorphBack: allSpritesRadioButton.	radioButtons addMorphBack: (Morph new extent: (5@5); color: Color transparent).	radioButtons addMorphBack: label1.	radioButtons addMorphBack: (Morph new extent: (15@5); color: Color transparent).	thisSpriteRadioButton _ allSpritesRadioButton fullCopy off.	label2 _ StringMorph new		contents: ('For this sprite only' localized);		font: (ScratchFrameMorph getFont: #NewVariableDialogBox).	label2 color: ScratchFrameMorph dialogBoxTextColor.	radioButtons addMorphBack: thisSpriteRadioButton.	radioButtons addMorphBack: (Morph new extent: (5@5); color: Color transparent).	radioButtons addMorphBack: label2.	ScratchTranslator isRTL		ifTrue: [radioButtons submorphs reversed do: [:m |			m delete.			radioButtons addMorphBack: m]].	mainColumn submorphsDo: [: m |		((m = messageLineMorphs) not) ifTrue: [m delete]].	mainColumn		addMorphBack: (Morph new extent: (5@6); color: Color transparent);		addMorphBack: typeinMorph;		addMorphBack: (Morph new extent: (5@7); color: Color transparent);		addMorphBack: radioButtons;		addMorphBack: (Morph new extent: (5@7); color: Color transparent);		addMorphBack: buttonRow;		addMorphBack: bottomSpacer.! !!ObjStream class methodsFor: 'class initialization' stamp: 'EiichiroIto 8/1/2018 19:19'!userClasses	"Answer an array of (<class id>, <class name>) records for all version numbered user classes."	"The following finds obsolete user classes:"	"self initialize. self userClasses reject: [:rec | Smalltalk includesKey: rec second]"	^ #(		"id		class"		(100		Morph)		(101		BorderedMorph)		(102		RectangleMorph)		(103		EllipseMorph)		(104		AlignmentMorph)		(105		StringMorph)		(106		UpdatingStringMorph)		(107		SimpleSliderMorph)		(108		SimpleButtonMorph)		(109		SampledSound)		(110		ImageMorph)		(111		SketchMorph)		"(120	SpriteMorph)"		"(121		SoundMorph)"		"(122	ImageBoxMorph)"		(123		SensorBoardMorph)		(124		ScratchSpriteMorph)		(125		ScratchStageMorph)		(126		ScratchConsoleMorph)		(140		ChoiceArgMorph)		(141		ColorArgMorph)		(142		ExpressionArgMorph)		"(143	ParameterReferenceMorph)"		"(144	PositionArgMorph)"		(145		SpriteArgMorph)		"(146	VariableArgMorph)"		(147		BlockMorph)		(148		CommandBlockMorph)		(149		CBlockMorph)		"(150	MethodCallBlockMorph)"		(151		HatBlockMorph)		"(152	ScratchButtonMorph)"		(153		ScratchScriptsMorph)		(154		ScratchSliderMorph)		(155		WatcherMorph)		"(156	ParameterMorph)"		(157		SetterBlockMorph)		(158		EventHatMorph)		"(159	EventArgMorph)"		(160		VariableBlockMorph)		"(161		IACTHatBlock)"		(162		ImageMedia)		(163		MovieMedia)		(164		SoundMedia)		(165		KeyEventHatMorph)		(166		BooleanArgMorph)		(167		EventTitleMorph)		(168		MouseClickEventHatMorph)		(169		ExpressionArgMorphWithMenu)		(170		ReporterBlockMorph)		(171		MultilineStringMorph)		(172		ToggleButton)		(173		WatcherReadoutFrameMorph)		(174		WatcherSliderMorph)		(175		ScratchListMorph)		(176		ScrollingStringMorph)	)! !!PaintFrame methodsFor: 'initialization' stamp: 'EiichiroIto 8/1/2018 19:19'!addButtons	| b |	fileButtons _ AlignmentMorph newRow		color: Color transparent;		vResizing: #rigid;		width: 233;		inset: 0.	b _ self makeButtonLabel: 'Import' selector:  #import.	b setProperty: #balloonText toValue: 'Import an image on top of your current canvas' localized.	fileButtons addMorphBack: b.	b _ ResizableToggleButton2 new		offForm: (ScratchFrameMorph skinAt: #paintUtilityButton)			onForm: (ScratchFrameMorph skinAt: #paintUtilityButtonPressed);		label: 'Clear' localized font: (ScratchFrameMorph getFont: #PaintUtilityButton);		target: canvasMorph;		actionSelector: #eraseAll;		setProperty: #balloonText toValue: 'Clear canvas' localized.	b labelColorOn: ScratchFrameMorph labelOnColor labelColorOff: ScratchFrameMorph labelOffColor labelColorOver: ScratchFrameMorph labelOffColor.	fileButtons addMorphBack: (AlignmentMorph newSpacer: Color transparent).	fileButtons addMorphBack: b.	canvasButtons _ AlignmentMorph newRow		color: Color transparent;		vResizing: #shrinkWrap;		inset: 0.	b _ self makeButtonLabel: 'Undo' selector:  #undo.	b setProperty: #balloonText toValue: 'Undo' localized.	canvasButtons addMorphBack: b.	b _ self makeButtonLabel: 'Redo' selector:  #redo.	b setProperty: #balloonText toValue: 'Redo' localized.	canvasButtons addMorphBack: b.	self addMorph: fileButtons.	self addMorph: canvasButtons.	self addMorph: self makeZoomBar.! !!PaintFrame methodsFor: 'initialization' stamp: 'EiichiroIto 8/1/2018 19:19'!addSetRotationCenterButton	| setRotationLabel spacer font |	setRotationCenterMorph _ AlignmentMorph newRow		color: Color transparent;		centering: #center.	"make components"	setRotationCenterButton _ ToggleButton		onForm: (ScratchFrameMorph skinAt: #paintSetRotCenterButtonPressed)		offForm: (ScratchFrameMorph skinAt: #paintSetRotCenterButton).	setRotationCenterButton		target: paletteMorph;		actionSelector: #toggleRotationPoint;		setProperty: #balloonText toValue: 'Position the cross-hair to set the rotation center' localized.	spacer _ Morph new extent: 6@3; color: Color transparent.	setRotationLabel _ StringMorph contents: 'Set costume center' localized.	font _ (ScratchFrameMorph getFont: #PaintSetRotationCenter).	setRotationLabel font: font; color: ScratchFrameMorph dialogBoxTextColor.	"add components"	setRotationCenterMorph		addMorphBack: setRotationCenterButton;		addMorphBack: spacer;		addMorphBack: setRotationLabel.	"add bar to frame"	self addMorph: setRotationCenterMorph.! !!PaintFrame methodsFor: 'initialization' stamp: 'EiichiroIto 8/1/2018 19:19'!makeButtonLabel: aString selector: sel	| font |	font _ (ScratchFrameMorph getFont: #PaintUtilityButton).	^ ResizableToggleButton2 new		offForm: (ScratchFrameMorph skinAt: #paintUtilityButton)			onForm: (ScratchFrameMorph skinAt: #paintUtilityButtonPressed);		label: aString localized font: font;		target: canvasMorph;		actionSelector: sel;		labelColorOn: ScratchFrameMorph labelOnColor labelColorOff: ScratchFrameMorph labelOffColor labelColorOver: ScratchFrameMorph labelOffColor! !!PaintPalette methodsFor: 'accessing' stamp: 'EiichiroIto 8/1/2018 19:19'!updateOptionsPane	| options font s spacer form b formMorph colorToUse brushThumbnail n2 aColor2 fName |	optionsPane removeAllMorphs.	options _ AlignmentMorph newRow		width: (optionsPane width - 16);		height: (optionsPane height - 30);		color: Color transparent;		hResizing: #shrinkWrap;		vResizing: #shrinkWrap;		inset: 0.	(#(paint erase line) includes: self mode) ifTrue: [		brushSizeMorph _ AlignmentMorph newRow			centering: #center;			color: Color transparent.		font _ (StrikeFont fontName: 'VerdanaBold' size: 11).		s _ (StringMorph contents: 'Brush size: ' localized).		self mode = #erase ifTrue: [s contents: ('Eraser size' localized ,': ')].		s font: font; color: ScratchFrameMorph dialogBoxTextColor.		brushSizeMorph addMorphBack: s.		self mode = #erase			ifTrue: [colorToUse _ Color transparent]			ifFalse: [colorToUse _ self color1].		brushSizeMorph addMorphBack: (Morph new extent: 2@5; color: Color transparent).		brushSizeMorph addMorphBack: (ImageMorph new form: (ScratchFrameMorph skinAt: #downArrow)).		brushSizeMorph addMorphBack: (Morph new extent: 4@5; color: Color transparent).		brushThumbnail _ Morph new			extent: 30@30;			color: Color transparent.		n2 _ self brushSize.		(n2 <= 6) ifTrue: [n2 _ n2 + 1].		(n2 == 29) ifTrue: [n2 _ 23].		(n2 == 47) ifTrue: [n2 _ 25].		(n2 == 75) ifTrue: [n2 _ 27].		brushIcon _ ImageMorph new form: (PaintCanvas brushCursorSize: n2 color: colorToUse scale: 1).		brushIcon position: (15@15 - ((n2//2)@(n2//2))).		brushThumbnail addMorphBack: brushIcon.		brushSizeMorph addMorphBack: brushThumbnail.		options			addMorphBack: brushSizeMorph].	(#(oval rect) includes: self mode) ifTrue: [		b _ ToggleButton onForm: (ScratchFrameMorph skinAt: #paintOptionsButtonPressed)					 offForm: (ScratchFrameMorph skinAt: #paintOptionsButton).		b			target: self;			actionSelector: #shapeFilling:;			arguments: (Array with: true);			toggleMode: false.		self shapeFilling ifTrue: [b on].		(self mode = #oval)			ifTrue: [form _ Form extent: 16@17 depth: 16.					(FormCanvas on: form) fillOval: form boundingBox color: self color1.					formMorph _ ImageMorph new form: form; position: 7@5]			ifFalse: [form _ Form extent: 16@17 depth: 8. form fillColor: self color1.					formMorph _ ImageMorph new form: form; position: 7@5].		b addMorph: formMorph.		options addMorphBack: b.		options addMorphBack: (Morph new extent: 5@2; color: Color transparent).		b _ ToggleButton onForm: (ScratchFrameMorph skinAt: #paintOptionsButtonPressed)					 offForm: (ScratchFrameMorph skinAt: #paintOptionsButton).		b			target: self;			actionSelector: #shapeFilling:;			arguments: (Array with: false);			toggleMode: false.		self shapeFilling ifFalse: [b on].		(self mode = #oval)			ifTrue: [form _ Form extent: 16@17 depth: 16.					(FormCanvas on: form) frameOval: form boundingBox width: 2 color: self color1.					formMorph _ ImageMorph new form: form; position: 7@5]			ifFalse: [form _ Form extent: 16@17 depth: 8. form border: (0@0 extent: 16@17) width: 2 fillColor: self color1.					formMorph _ ImageMorph new form: form; position: 7@5].		b addMorph: formMorph.		options addMorphBack: b].	#fill = self mode ifTrue: [		fillStylePane _ AlignmentMorph newRow		inset: 0;		borderWidth: 0;		color: Color transparent;		vResizing: #shrinkWrap;		hResizing: #shrinkWrap.		spacer _ Morph new extent: 5@5; color: Color transparent.		#(color hGradient vGradient rGradient) do: [:style |			b _ ToggleButton onForm: (ScratchFrameMorph skinAt: #paintOptionsButtonPressed)					 offForm: (ScratchFrameMorph skinAt: #paintOptionsButton).			b				target: self;				actionSelector: #fillStyle:;				arguments: (Array with: style);				toggleMode: false.			form _ Form extent: 16@17 depth: 32.			(style == #color) ifTrue: [form fillColor: self color1].			(style == #hGradient) ifTrue: [form fillFromXColorBlock: [:m | self color2 mixed: m with: self color1]].			(style == #vGradient) ifTrue: [form fillFromYColorBlock: [:m | self color2 mixed: m with: self color1]].			(style == #rGradient) ifTrue: [form fillRadialFromXColorBlock: [:m | self color2 mixed: m with: self color1] center: 8@8].			formMorph _ ImageMorph new form: form; position: 7@5.			formMorph lock.			b addMorph: formMorph.			b off.			(style == self fillStyle) ifTrue: [b on].			fillStylePane addMorphBack: spacer fullCopy.			fillStylePane addMorphBack: b.			b position: b left@ b top + 2].		fillStylePane addMorphBack: spacer fullCopy.		options			addMorphBack: fillStylePane].	#text = self mode ifTrue: [		font _ (StrikeFont fontName: 'VerdanaBold' size: 11).		fName _ canvasMorph canvasTextBox font name.		textFontMenu _ ImageMorph new form: (ScratchFrameMorph skinAt: #textFontMenu).		textFontMorph _ StringMorph new font: font.		textFontMorph contents: (textFontMorph stringWithEllipses: fName limitedToWidth: 109).		textFontMorph color: ScratchFrameMorph dialogBoxTextColor.		textFontMenu addMorph: textFontMorph.		textFontMorph position: 8@3.		textSizeMenu _ ImageMorph new form: (ScratchFrameMorph skinAt: #textSizeMenu).		textSizeMorph _ StringMorph contents: canvasMorph canvasTextBox font pointSize asString font: font.		textSizeMorph color: ScratchFrameMorph dialogBoxTextColor.		textSizeMenu addMorph: textSizeMorph.		textSizeMorph position: 9@3.		aColor2 _ self color1.		(aColor2 == Color transparent) ifTrue: [aColor2 _ Color white].			canvasMorph textColor: aColor2.			canvasMorph changed.		options			addMorphBack: textFontMenu;			addMorphBack: (Morph new width: 8; height: 5; color: Color transparent);			addMorphBack: textSizeMenu].	optionsPane addMorph: options.	options position: (optionsPane left + (optionsPane width // 2) - (options width // 2))@(optionsPane top + (optionsPane height //2) - (options height // 2)).! !!ScratchConsoleMorph methodsFor: 'initialization' stamp: 'EiichiroIto 8/1/2018 19:19'!addMorphs	| font |	font := ScratchFrameMorph getFont: #ProjectNotes.	textMorph := ScrollingStringMorph new borderWidth: 0;			 contents: '';			 font: font;			 backForm: (ScratchFrameMorph skinAt: #stringFieldFrame);			 width: 300;			 isEditable: false;			 textColor: ScratchFrameMorph dialogBoxTextColor.	self addMorphBack: textMorph.! !!ScratchConsoleMorph methodsFor: 'initialization' stamp: 'EiichiroIto 8/1/2018 19:19'!initialize	super initialize.	self addMorphs.	self extent: textMorph extent.	self color: Color green! !!ScratchConsoleMorph methodsFor: 'dropping/grabbing' stamp: 'EiichiroIto 7/28/2018 15:24'!justDroppedInto: newOwner event: evt 	(newOwner isKindOf: ScratchStageMorph)		ifFalse: [self world addMorph: self]! !!ScratchConsoleMorph methodsFor: 'accessing' stamp: 'EiichiroIto 7/28/2018 16:07'!append: aString	textMorph append: aString.! !!ScratchConsoleMorph methodsFor: 'accessing' stamp: 'EiichiroIto 7/28/2018 16:07'!clear	textMorph clear.! !!ScratchConsoleMorph methodsFor: 'accessing' stamp: 'EiichiroIto 7/28/2018 16:07'!newLine	textMorph newLine.! !!ScratchConsoleMorph methodsFor: 'event handling' stamp: 'EiichiroIto 7/28/2018 19:19'!handlesMouseDown: evt	^ true! !!ScratchConsoleMorph methodsFor: 'event handling' stamp: 'EiichiroIto 8/1/2018 19:19'!mouseDown: evt 	evt rightButtonPressed | evt shiftPressed		ifTrue: 			[Sensor waitNoButton.			^ self rightButtonMenu].	evt hand waitForClicksOrDrag: self event: evt.! !!ScratchConsoleMorph methodsFor: 'event handling' stamp: 'EiichiroIto 7/29/2018 07:40'!mouseHold: evt 	self rightButtonMenu.! !!ScratchConsoleMorph methodsFor: 'event handling' stamp: 'EiichiroIto 8/1/2018 19:19'!rightButtonMenu	| menu |	menu := CustomMenu new.	menu add: 'clear' action: #clear.	menu add: 'hide' action: #delete.	menu localize; invokeOn: self! !!ScratchFileChooserDialog methodsFor: 'initialization' stamp: 'EiichiroIto 8/1/2018 19:19'!createScratchFileChooserFor: aScratchFrameMorph saving: savingFlag	"Create a Scratch file chooser dialog box with a project thumbnail and info box."	| labelFont contentsFont commentFont thumbnailHolder |	scratchFrame _ aScratchFrameMorph.	readingScratchFile _ savingFlag not.	list _ ScratchFilePicker new extensions: #(scratch sb).	self removeAllMorphs.	bottomSpacer delete.	bottomSpacer _ nil.	mainColumn addMorphBack: list.	savingFlag ifFalse: [		self title: 'Open Project'.		list scratchInfoClient: self].	labelFont _ (ScratchFrameMorph getFont: #FileChooserLabel).	contentsFont _ (ScratchFrameMorph getFont: #FileChooserContents).	commentFont _ (ScratchFrameMorph getFont: #FileChooserComment).	savingFlag ifTrue: [		self title: 'Save Project'.		newFileTitle _ StringMorph contents: ('New Filename:' localized, ' ') font: labelFont.		newFileTitle color: (Color gray: 0.3).		newFileName _ StringFieldMorph new			contents: scratchFrame projectName;			client: self;			font: contentsFont;			color: ScratchFrameMorph fieldColor;			width: 180.		tabFields add: newFileName.		newTitleBin			addMorphBack: newFileTitle;			addMorphBack: (Morph new extent: (5@5); color: Color transparent);			addMorphBack: newFileName;			addMorphBack: (AlignmentMorph newSpacer: Color transparent).		ScratchTranslator isRTL			ifTrue: [newTitleBin submorphs reversed do: [:m |				m delete.				newTitleBin addMorphBack: m]]].	mainColumn		addMorphBack: (Morph new extent: (5@9); color: Color transparent);		addMorphBack: newTitleBin.	thumbnailHolder _ AlignmentMorph newColumn		centering: #center;		color: Color transparent.	thumbnailFrameMorph _ ImageFrameMorph new		initFromForm: (ScratchFrameMorph skinAt: #dialogThumbnailFrame).	thumbnailFrameMorph extent: (170@130).	thumbnailHolder addMorph: thumbnailFrameMorph.	fileInfoColumn		addMorphBack: thumbnailHolder;		addMorphBack: (Morph new extent: (5@6); color: Color transparent). "spacer"	thumbnailMorph _ ImageMorph new form: (Form extent: 160@120 depth: 1).	thumbnailFrameMorph addMorphFront: (thumbnailMorph position: ((thumbnailFrameMorph position) + (5@5))).	authorLabelMorph _ StringMorph contents: 'Project author:' localized font: labelFont.	authorLabelMorph color: ScratchFrameMorph dialogBoxTextColor.	fileInfoColumn addMorphBack: authorLabelMorph.	savingFlag		ifTrue: [authorMorph _ StringFieldMorph new			useStringFieldFrame;			contents: '';			font: contentsFont.			tabFields add: authorMorph]		ifFalse: [fileInfoColumn addMorphBack: (Morph new extent: (5@6); color: Color transparent). "spacer"			authorMorph _ StringFieldMorph new				color: Color transparent;				borderWidth: 0;				contents: '';				isEditable: false;				font: contentsFont].	fileInfoColumn		addMorphBack: authorMorph;		addMorphBack: (Morph new extent: (5@6); color: Color transparent). "spacer"	commentLabelMorph _ StringMorph contents: 'About this project:' localized font: labelFont.	commentLabelMorph color: authorLabelMorph color.	fileInfoColumn addMorphBack: commentLabelMorph.	commentMorph _ ScrollingStringMorph new		borderWidth: 0;		contents: '';		font: commentFont;		extent: (210@110).	savingFlag		ifTrue: [commentMorph backForm: (ScratchFrameMorph skinAt: #stringFieldFrame).			tabFields add: commentMorph]		ifFalse: [commentMorph isEditable: false].	fileInfoColumn addMorphBack: commentMorph.	fileInfoColumn addMorphBack: buttonRow.	self		addMorphBack: shortcutColumn;		addMorphBack: mainColumn;		addMorphBack: fileInfoColumn.	savingFlag ifTrue: [		self scratchInfo: scratchFrame projectInfo.		thumbnailMorph form: scratchFrame workPane thumbnailForm.		"default author field to login name if known; else author"		(aScratchFrameMorph loginName size > 0)			ifTrue: [authorMorph contents: aScratchFrameMorph loginName]			ifFalse: [authorMorph contents: aScratchFrameMorph author]].! !!ScratchFilePicker methodsFor: 'private' stamp: 'EiichiroIto 8/1/2018 19:19'!buildButtons	"Build my directory bar, parent buttons, and new folder button."	| b f |	topBarMorph _ AlignmentMorph newRow		hResizing: #spaceFill;		vResizing: #rigid;		centering: #center;		color: Color transparent.	directoryBarArrowMorph _ ImageMorph new form: (ScratchFrameMorph skinAt: #directoryBarArrow).	directoryBarMorph _ ResizableToggleButton2 new		offForm: (ScratchFrameMorph skinAt: #directoryBar)		onForm: (ScratchFrameMorph skinAt: #directoryBar);		padding: 3@5;		setLabelColor: ScratchFrameMorph dialogBoxTextColor.	directoryBarMorph		target: self;		actionSelector: #directoryMenu;		actWhen: #buttonUp.	topBarMorph		addMorphBack: (Morph new extent: (5@5); color: Color transparent);		addMorphBack: directoryBarMorph.	b _ ToggleButton		onForm: (ScratchFrameMorph skinAt: #parentDirectoryButtonOn)		offForm: (ScratchFrameMorph skinAt: #parentDirectoryButton).	b		target: self;		actionSelector: #showParentDirectory;		actWhen: #buttonUp;		isMomentary: true.	topBarMorph		addMorphBack: (Morph new extent: (5@5); color: Color transparent);		addMorphBack: (b position: self position + (252@16)).	f _ ToggleButton		onForm: (ScratchFrameMorph skinAt: #newFolderIconSelected)		offForm: (ScratchFrameMorph skinAt: #newFolderIcon).	f		target: self;		actionSelector: #newDirectory;		actWhen: #buttonUp;		isMomentary: true.	topBarMorph		addMorphBack: (Morph new extent: (5@5); color: Color transparent);		addMorphBack: (f position: self position + (274@16)).	directoryBarMorph		label: (UTF8 withAll: '<directory>') font: (ScratchFrameMorph getFont: #FilePickerDirectoryName);		leftJustifyInset: 9.	self addMorphFront: (directoryBarArrowMorph position: self topLeft + ((b left - 32)@((50 - directoryBarArrowMorph height) // 2))).	self addMorphBack: (topBarMorph position: self topLeft + (5@5)).! !!ScratchFilePickerEntry methodsFor: 'initialization' stamp: 'EiichiroIto 8/1/2018 19:19'!name: aString dir: owningDirectory isDirectory: dirFlag	| icon m n |	directory _ owningDirectory.	entryName _ aString.	entryIsDirectory _ dirFlag.	entryIsDirectory		ifTrue: [icon _ ScratchFrameMorph skinAt: #folderIcon]		ifFalse: [icon _ ScratchFrameMorph skinAt: #fileIcon].	n _ dirFlag ifTrue: [entryName] ifFalse: [FileDirectory baseNameFor: entryName].	nameMorph _ StringMorph contents: (UTF8 withAll: n) font: (ScratchFrameMorph getFont: #FilePickerEntry).	nameMorph color: ScratchFrameMorph dialogBoxTextColor.	self addMorph: (nameMorph position: self position + (28@3)).	m _ ImageMorph new form: icon.	self addMorph: (m position: self position + (6@((nameMorph height - 6) // 2))).	highlit _ false.	self extent: 200@(nameMorph height + 6).! !!ScratchFilePickerEntry methodsFor: 'accessing' stamp: 'EiichiroIto 8/1/2018 19:19'!highlight: aBoolean	"Show or hide my highlight."	aBoolean ifFalse: [		highlit _ false.		self color: owner color.		nameMorph font: (ScratchFrameMorph getFont: #FilePickerEntry); color: ScratchFrameMorph dialogBoxTextColor.		borderWidth _ 0.		^ self].	highlit _ true.	"self color: owner color darker darker darker.	borderWidth _ 2.	borderColor _ (Color r: (96/255) g: (136/255) b: (182/255))."	self color: ScratchFrameMorph folderHighlightColor.	nameMorph font: (ScratchFrameMorph getFont: #FilePickerEntryHighlighted); color: Color white.! !!ScratchFilePickerImageEntry methodsFor: 'initialization' stamp: 'EiichiroIto 8/1/2018 19:19'!name: aString dir: owningDirectory isDirectory: dirFlag	| n truncated w eWidth |	self color: Color transparent.	self extent: 125@110.	directory _ owningDirectory.	entryName _ aString.	entryIsDirectory _ dirFlag.	thumbnailReady _ false.	thumbnailMorph _ ImageMorph new.	entryIsDirectory		ifTrue: [thumbnailMorph form: (ScratchFrameMorph skinAt: #bigFolderIcon)]		ifFalse: [thumbnailMorph form: ((Form extent: 4@4 depth: 8) fillColor: Color transparent)].	thumbnailMorph top: self bottom - thumbnailMorph height - 23.	thumbnailMorph left: self left + ((self width - thumbnailMorph width) // 2).	n _ dirFlag ifTrue: [entryName] ifFalse: [FileDirectory baseNameFor: entryName].	nameMorph _ StringMorph contents: (UTF8 withAll: n) font: (ScratchFrameMorph getFont: #FilePickerEntry).	nameMorph color: ScratchFrameMorph dialogBoxTextColor.	"trim file name to fit button, if necessary"	truncated _ false.	eWidth _ (ScratchTranslator stringExtent: '...' font: (ScratchFrameMorph getFont: #FilePickerEntryHighlighted)) x.	w _ 100 - eWidth.	[((ScratchTranslator stringExtent: n font: nameMorph font) x) > w] whileTrue: [		truncated _ true.		n _ n copyFrom: 1 to: n size - 1].	truncated ifTrue: [n _ n, '...'].	nameMorph contents: (UTF8 withAll: n).	nameMorph bottom: self bottom - 2.	self isHighlit		ifTrue: [nameMorph left: self left + ((self width - nameMorph width - eWidth) // 2)]		ifFalse: [nameMorph left: self left + ((self width - nameMorph width) // 2)].	self addMorph: nameMorph.	self addMorph: thumbnailMorph.! !!ScratchFilePickerImageEntry methodsFor: 'accessing' stamp: 'EiichiroIto 8/1/2018 19:19'!highlight: aBoolean	"Show or hide my highlight."	aBoolean ifFalse: [		self color: owner color.		nameMorph font: (ScratchFrameMorph getFont: #FilePickerEntry); color: ScratchFrameMorph dialogBoxTextColor.		highlit _ false.		borderWidth _ 0.		nameMorph left: self left + ((self width - nameMorph width) // 2).		^ self].	"self color: owner color darker darker darker.	borderWidth _ 2.	borderColor _ (Color r: (96/255) g: (136/255) b: (182/255))."	self color: ScratchFrameMorph folderHighlightColor.	nameMorph font: (ScratchFrameMorph getFont: #FilePickerEntryHighlighted); color: Color white.	nameMorph left: self left + ((self width - nameMorph width) // 2).	highlit _ true.! !!ScratchFrameMorph methodsFor: 'intialization' stamp: 'EiichiroIto 8/1/2018 19:19'!initialize	super initialize.	self processThemeSetting.	fillScreenFlag _ false.	paintingInProgress _ false.	projectInfo _ Dictionary new.	watcherPositions _ Dictionary new.	justSaved _ false.	author _ ''.	loginName _ ''.	loginPassword _ ''.	viewMode _ #normal.	self createBasicPanes.	self createLogo.	self createMenuPanel.	self createViewModeButtonsPanel.	self createStageButtonsPanel.	self createToolbar.	self extent: 1000@600.! !!ScratchFrameMorph methodsFor: 'intialization' stamp: 'EiichiroIto 8/1/2018 19:19'!makeXYReadout	"Make and answer an x-y readout."	| normalFont boldFont panel spaceWidth labelX readoutX labelY readoutY |	normalFont _ (ScratchFrameMorph getFont: #XYReadout).	boldFont _ (ScratchFrameMorph getFont: #XYReadoutBold).	(ScratchTranslator renderScale ~= 1) ifTrue: [		"force fonts to be fixed size:"		normalFont _ StrikeFont			osFontName: normalFont name			size: normalFont pointSize / ScratchTranslator renderScale asFloat.		boldFont _ StrikeFont			osFontName: boldFont name			size: boldFont pointSize / ScratchTranslator renderScale asFloat].	panel _ Morph new color: ScratchFrameMorph readoutColor.	ScratchTranslator isRTL		ifTrue: [labelX _ StringMorph new font: normalFont; contents: ':x' asUTF8]		ifFalse: [labelX _ StringMorph new font: normalFont; contents: 'x:' asUTF8].	readoutX _ UpdatingStringMorph new		target: self; getSelector: #mouseX;		forceUnicodeRendering: true;		font: boldFont;		stepTime: 150;		growable: false.	readoutX width: (readoutX stringWidth: '-1000').	ScratchTranslator isRTL		ifTrue: [labelY _ labelX fullCopy contents: ':y' asUTF8]		ifFalse: [labelY _ labelX fullCopy contents: 'y:' asUTF8].	readoutY _ readoutX fullCopy getSelector: #mouseY.	labelX color: ScratchFrameMorph dialogBoxTextColor.	labelY color: ScratchFrameMorph dialogBoxTextColor.	readoutX color: ScratchFrameMorph dialogBoxTextColor.	readoutY color: ScratchFrameMorph dialogBoxTextColor.	spaceWidth _ ((readoutX stringWidth: ' ') * 0.8) asInteger.	ScratchTranslator isRTL		ifTrue: [readoutY rightJustify: true.			panel addMorph: (readoutY position: 0@0).			panel addMorph: (labelY position: ((readoutY topRight) + (spaceWidth@0))).]		ifFalse: [panel addMorph: (labelX position: 0@0).			panel addMorph: (readoutX position: ((labelX topRight) + (spaceWidth@0)))].	ScratchTranslator isRTL		ifTrue: [readoutX rightJustify: true.			panel addMorph: (readoutX position: (labelY right@labelY top) + (spaceWidth@0)).			panel addMorph: (labelX position: ((readoutX topRight) + (spaceWidth@0)))]		ifFalse: [panel addMorph: (labelY position: (labelX right + readoutX width + 8)@(labelX top)).			panel addMorph: (readoutY position: ((labelY topRight) + (spaceWidth@0)))].		ScratchTranslator isRTL		ifTrue: [panel extent: ((labelX right) max: (labelY right))@(labelY bottom)]		ifFalse: [panel extent: ((readoutX right) max: (readoutY right))@(labelY bottom)].	^ panel! !!ScratchFrameMorph methodsFor: 'menu/button actions' stamp: 'EiichiroIto 8/1/2018 19:19'!helpMenu: t1 	| t2 |	t2 _ CustomMenu new.	t2 add: 'Change Theme' action: #changeTheme.	t2 add: 'About kodo' action: #aboutScratch.	t2 localize.	#(1 2 ) do: [:t3 | t2 labels at: t3 put: ((t2 labels at: t3)				copyFrom: 1 to: (t2 labels at: t3) size - 1)				, ScratchTranslator ellipsesSuffix].	t2 invokeOn: self at: t1 bottomLeft + (0 @ 10)! !!ScratchFrameMorph methodsFor: 'kodo' stamp: 'EiichiroIto 8/1/2018 19:19'!changeTheme	| menu theme |	menu := CustomMenu new title: 'Change Theme'.	ScratchTheme themeNames asSortedCollection do: [:each | menu add: each action: each].	theme := menu localize startUp.	theme ifNil: [^ self].	(self confirm: 'The changes will take effect after restart. Quit Kodo OK?' localized) ifFalse: [^ self].	self recordTheme: theme.	self class restart.! !!ScratchFrameMorph methodsFor: 'kodo' stamp: 'EiichiroIto 7/31/2018 10:30'!processThemeSetting	self class setVisibleDrives: nil.	ScratchFileChooserDialog clearFolderCache.	self readSettingsFile		associationsDo: [:assoc | assoc key = 'theme' ifTrue: [ScratchTheme changeTheme: assoc value asSymbol]]! !!ScratchFrameMorph methodsFor: 'kodo' stamp: 'EiichiroIto 7/31/2018 10:27'!recordTheme: aString 	| fName f sz settings all |	fName := FileDirectory default fullNameFor: 'Scratch.ini'.	f := FileStream concreteStream new open: fName forWrite: true.	f ifNil: [^ self].	sz := f size.	settings := (f next: sz) lines.	settings := settings reject: [:s | s asLowercase beginsWith: 'theme='].	settings := settings				reject: 					[:s | 					all := s asByteArray asSet.					all size = 1 and: [all asArray first = 0]].	settings := settings copyWith: 'Theme=' , aString.	f position: 0.	settings do: [:s | f nextPutAll: s , String crlf].	[f position < sz]		whileTrue: [f nextPut: 0 asCharacter].	f close! !!ScratchFrameMorph class methodsFor: 'scratch skin' stamp: 'EiichiroIto 8/1/2018 19:19'!skinAt: aSymbol ifAbsent: aBlock	^ ScratchTheme formAt: aSymbol ifAbsent: aBlock! !!ScratchFrameMorph class methodsFor: 'utilities' stamp: 'EiichiroIto 8/1/2018 19:19'!buttonLabel: aString selector: aSymbolOrNil	"Answer a big button with the given label."	| button |	button _ ResizableToggleButton2 new		offForm: (ScratchFrameMorph skinAt: #btn)			onForm: (ScratchFrameMorph skinAt: #btnPressed);		label: aString font: (ScratchFrameMorph getFont: #Button);		actionSelector: aSymbolOrNil;		labelColorOn: ScratchFrameMorph labelOnColor labelColorOff: ScratchFrameMorph labelOffColor labelColorOver: ScratchFrameMorph labelOnColor.	^ button! !!ScratchFrameMorph class methodsFor: 'kodo' stamp: 'EiichiroIto 7/30/2018 20:56'!blockArgColor	^ ScratchTheme colorAt: #blockArgColor! !!ScratchFrameMorph class methodsFor: 'kodo' stamp: 'EiichiroIto 7/31/2018 19:01'!categoryOffColor	^ ScratchTheme colorAt: #categoryOffColor! !!ScratchFrameMorph class methodsFor: 'kodo' stamp: 'EiichiroIto 7/31/2018 19:01'!categoryOnColor	^ ScratchTheme colorAt: #categoryOnColor! !!ScratchFrameMorph class methodsFor: 'kodo' stamp: 'EiichiroIto 7/31/2018 19:05'!dialogBoxTextColor	^ ScratchTheme colorAt: #dialogBoxTextColor! !!ScratchFrameMorph class methodsFor: 'kodo' stamp: 'EiichiroIto 7/31/2018 10:04'!dialogBoxTitleColor	^ ScratchTheme colorAt: #dialogBoxTitleColor! !!ScratchFrameMorph class methodsFor: 'kodo' stamp: 'EiichiroIto 8/1/2018 19:19'!fieldColor	^ ScratchTheme colorAt: #fieldColor! !!ScratchFrameMorph class methodsFor: 'kodo' stamp: 'EiichiroIto 8/1/2018 19:19'!folderHighlightColor	^ ScratchTheme colorAt: #folderHighlightColor! !!ScratchFrameMorph class methodsFor: 'kodo' stamp: 'EiichiroIto 7/30/2018 18:35'!labelOffColor	^ ScratchTheme colorAt: #labelOffColor! !!ScratchFrameMorph class methodsFor: 'kodo' stamp: 'EiichiroIto 7/30/2018 18:35'!labelOnColor	^ ScratchTheme colorAt: #labelOnColor! !!ScratchFrameMorph class methodsFor: 'kodo' stamp: 'EiichiroIto 8/1/2018 19:19'!libraryColor	^ ScratchTheme colorAt: #libraryColor! !!ScratchFrameMorph class methodsFor: 'kodo' stamp: 'EiichiroIto 8/1/2018 19:19'!listColor	^ ScratchTheme colorAt: #listColor! !!ScratchFrameMorph class methodsFor: 'kodo' stamp: 'EiichiroIto 7/29/2018 16:53'!menuHighlightColor	^ ScratchTheme colorAt: #menuHighlightColor! !!ScratchFrameMorph class methodsFor: 'kodo' stamp: 'EiichiroIto 7/29/2018 16:52'!menuNormalColor	^ ScratchTheme colorAt: #menuNormalColor! !!ScratchFrameMorph class methodsFor: 'kodo' stamp: 'EiichiroIto 8/1/2018 19:19'!palettePaneColor	^ ScratchTheme colorAt: #palettePaneColor! !!ScratchFrameMorph class methodsFor: 'kodo' stamp: 'EiichiroIto 8/1/2018 19:19'!readoutColor	^ ScratchTheme colorAt: #readoutColor! !!ScratchFrameMorph class methodsFor: 'kodo' stamp: 'EiichiroIto 8/2/2018 08:12'!restart	| m |	self allInstancesDo: [:each | each delete].	m := ScratchFrameMorph new.	m setLanguage: 'en'.	m position: World topRight - (m width @ 0).	m startup.	m newScratchProject.	m openInWorld.	m fillScreenOn.	World doOneCycleNow.	Smalltalk snapshot: true andQuit: true.	m startup.	Sensor useOSEvents: true.! !!ScratchFrameMorph class methodsFor: 'kodo' stamp: 'EiichiroIto 8/1/2018 19:19'!scriptsPaneColor	^ ScratchTheme colorAt: #scriptsPaneColor! !!ScratchFrameMorph class methodsFor: 'kodo' stamp: 'EiichiroIto 8/1/2018 19:19'!sensorBoardColor	^ ScratchTheme colorAt: #sensorBoardColor! !!ScratchFrameMorph class methodsFor: 'kodo' stamp: 'EiichiroIto 8/1/2018 19:19'!textColor	^ ScratchTheme colorAt: #textColor! !!ScratchFrameMorph class methodsFor: 'kodo' stamp: 'EiichiroIto 8/1/2018 19:19'!textSelectionColor	^ ScratchTheme colorAt: #textSelectionColor! !!ScratchFrameMorph class methodsFor: 'kodo' stamp: 'EiichiroIto 7/31/2018 17:13'!thumbnailDirectionColor	^ ScratchTheme colorAt: #thumbnailDirectionColor! !!ScratchFrameMorph class methodsFor: 'kodo' stamp: 'EiichiroIto 7/29/2018 16:49'!viewerPaneColor	^ ScratchTheme colorAt: #viewerPaneColor! !!ScratchFrameMorph class methodsFor: 'kodo' stamp: 'EiichiroIto 7/29/2018 16:46'!watcherBorderColor	^ ScratchTheme colorAt: #watcherBorderColor! !!ScratchFrameMorph class methodsFor: 'kodo' stamp: 'EiichiroIto 8/1/2018 19:19'!watcherColor	^ ScratchTheme colorAt: #watcherColor! !!ScratchMenuTitleMorph methodsFor: 'accessing' stamp: 'EiichiroIto 8/1/2018 19:19'!highlightColor	^ ScratchFrameMorph menuHighlightColor! !!ScratchMenuTitleMorph methodsFor: 'accessing' stamp: 'EiichiroIto 8/1/2018 19:19'!normalColor	^ ScratchFrameMorph menuNormalColor! !!ScratchScriptEditorMorph methodsFor: 'initialization' stamp: 'EiichiroIto 8/1/2018 19:19'!initialize	super initialize.	self		initFrontFromForm: (ScratchFrameMorph skinAt: #scriptPaneFrameTransparent2)		topSectionHeight: 90.	self color: ScratchFrameMorph scriptsPaneColor.	thumbnailMorph _ ScratchThumbnailMorph new.	self addMorph: (thumbnailMorph position: self position + (37@16)).	self addNameBox.	pageViewerMorph _ ScrollFrameMorph2 new		growthFraction: 0.1;		color: ScratchFrameMorph scriptsPaneColor.	self addMorph: (pageViewerMorph position: (self left @ (self top + topSectionHeight))).	rotationButtons _ #().	readoutMorphs _ #().	self target: nil.	thumbnailMorph extent: 50@50.	self extent: 300@400.	self createTabPane.! !!ScratchScriptEditorMorph methodsFor: 'private' stamp: 'EiichiroIto 8/1/2018 19:19'!addReadouts	"Add readouts for my target's position and direction."	| x y label readout s |	self deleteReadouts.	readoutMorphs _ OrderedCollection new.	x _ nameMorph left.	y _ nameMorph bottom + 5.	#(('x' xpos) ('y' ypos)('direction' heading)) do: [:spec |		(ScratchTranslator isRTL and: [(spec at: 1) = 'x' or: [(spec at: 1) = 'y']])			ifTrue: [s _ (':', spec first) asUTF8]			ifFalse: [s _ (spec first localized, ScratchTranslator colonSuffix)].		label _ StringMorph new			contents: s;			font: (ScratchFrameMorph getFont: #XYReadout);			position: x@y;			color: ScratchFrameMorph textColor.		readout _ (UpdatingStringMorph on: self target selector: spec second)			font: (ScratchFrameMorph getFont: #XYReadoutBold);			forceUnicodeRendering: true;			color: ScratchFrameMorph textColor;			contents: '-000';  "this sets the readout size"			growable: false;			stepTime: 100;			position: (label right + 4)@y.		ScratchTranslator isRTL ifTrue:[			readout rightJustify: true].		self addMorph: label; addMorph: readout.		readoutMorphs add: label; add: readout.		readout startStepping.		x _ readout right + 2].	ScratchTranslator isRTL ifTrue: [		readoutMorphs reversed do: [: m |			readoutMorphs remove: m.			readoutMorphs add: m]].	penReadout _ Morph new extent: 15@5.	penReadout position: (lockButton right + 4)@(nameMorph top + ((nameMorph height - penReadout height) / 2));		color: Color transparent.	self addMorph: penReadout.	readoutMorphs add: penReadout.	penReadout startStepping.	readoutMorphs _ readoutMorphs asArray.! !!ScratchSoundRecorderDialogMorph methodsFor: 'initialization' stamp: 'EiichiroIto 8/1/2018 19:19'!makeRecordTimer	"timer"	timerMorph _ StringMorph  "morph to display the duration"		contents: (self convertToMmss: 0)		font: (ScratchFrameMorph getFont: #SoundRecorderTimer).	timerMorph color: ScratchFrameMorph dialogBoxTextColor.	fileInfoColumn		addMorphBack: (Morph new extent: (5@5); color: Color transparent);		addMorphBack: timerMorph.! !!ScratchSpriteMorph methodsFor: 'kodo' stamp: 'EiichiroIto 7/29/2018 07:36'!appendConsole: aString 	| m |	(m _ self ownerThatIsA: ScratchStageMorph)		ifNotNil: [m appendConsole: aString].! !!ScratchSpriteMorph methodsFor: 'kodo' stamp: 'EiichiroIto 7/29/2018 07:37'!clearConsole	| m |	(m _ self ownerThatIsA: ScratchStageMorph)		ifNotNil: [m clearConsole].! !!ScratchSpriteMorph methodsFor: 'kodo' stamp: 'EiichiroIto 7/29/2018 07:37'!hideConsole	| m |	(m _ self ownerThatIsA: ScratchStageMorph)		ifNotNil: [m hideConsole].! !!ScratchSpriteMorph methodsFor: 'kodo' stamp: 'EiichiroIto 7/29/2018 07:37'!newLineConsole	| m |	(m _ self ownerThatIsA: ScratchStageMorph)		ifNotNil: [m newLineConsole].! !!ScratchSpriteMorph methodsFor: 'kodo' stamp: 'EiichiroIto 7/29/2018 07:37'!showConsole	| m |	(m _ self ownerThatIsA: ScratchStageMorph)		ifNotNil: [m showConsole].! !!ScratchSpriteMorph class methodsFor: 'block specs' stamp: 'EiichiroIto 8/1/2018 19:19'!blockSpecs	| blocks |	blocks _ #(		'motion'			('move %n steps'				-	forward:)			('turn %n degrees'				-	turnRight: 15)	"icon shows turn direction"			('turn %n degrees'				-	turnLeft: 15)	"icon shows turn direction"			-			('point in direction %d'			-	heading: 90)			('point towards %m'				-	pointTowards:)			-			('go to x:%n y:%n'				-	gotoX:y: 0 0)			('go to %m'						-	gotoSpriteOrMouse:)			('glide %n secs to x:%n y:%n'	t	glideSecs:toX:y:elapsed:from: 1 50 50)			-			('change x by %n'				-	changeXposBy: 10)			('set x to %n'					-	xpos: 0)			('change y by %n'				-	changeYposBy: 10)			('set y to %n'					-	ypos: 0)			-			('if on edge, bounce'			-	bounceOffEdge)			-			('x position'						r	xpos)			('y position'						r	ypos)			('direction'						r	heading)		'pen'			('clear'							-	clearPenTrails)			-			('pen down'						-	putPenDown)			('pen up'						-	putPenUp)			-			('set pen color to %c'			-	penColor:)			('change pen color by %n'		-	changePenHueBy:)			('set pen color to %n'			-	setPenHueTo: 0)			-			('change pen shade by %n'		-	changePenShadeBy:)			('set pen shade to %n'			-	setPenShadeTo: 50)			-			('change pen size by %n'		-	changePenSizeBy: 1)			('set pen size to %n'				-	penSize: 1)			-			('stamp'							-	stampCostume)	).	blocks _ blocks, #(		'looks'			('switch to costume %l'			-	lookLike:)			('next costume'					-	nextCostume)			('costume #'						r	costumeIndex)			-			('say %s for %n secs'			t	say:duration:elapsed:from: 'Hello!!' 2)			('say %s'						-	say: 'Hello!!')			('think %s for %n secs'			t	think:duration:elapsed:from: 'Hmm...' 2)			('think %s'						-	think: 'Hmm...')			-			('change %g effect by %n'		-	changeGraphicEffect:by: 'color' 25)			('set %g effect to %n'			-	setGraphicEffect:to: 'color' 0)			('clear graphic effects'			-	filterReset)			-			('change size by %n'			-	changeSizeBy:)			('set size to %n%'				-	setSizeTo: 100)			('size'							r	scale)			-			('show'							-	show)			('hide'							-	hide)			-			('go to front'					-	comeToFront)			('go back %n layers'			-	goBackByLayers: 1)			-			('append %s to console'			-	appendConsole: 'abc')			('newline'						- newLineConsole)			('clear console'			-	clearConsole)			('show console'				- showConsole)			('hide console'				- hideConsole)		'sensing'			('touching %m?' 				b	touching:)			('touching color %C?' 			b	touchingColor:)			('color %C is touching %C?'		b	color:sees:)			-			('ask %s and wait'				s	doAsk 'What''s your name?')			('answer'						r	answer)			-			('mouse x'						r	mouseX)			('mouse y'						r	mouseY)			('mouse down?'					b	mousePressed)			-			('key %k pressed?'				b	keyPressed: 'space')			-			('distance to %m'				r	distanceTo:)			-			('reset timer'					-	timerReset)			('timer'							r	timer)			-			('%a of %m'						r	getAttribute:of:)			-			('loudness'						r	soundLevel)			('loud?'							b	isLoud)			~			('%H sensor value'				r	sensor: 'slider')			('sensor %h?'					b	sensorPressed: 'button pressed')		).	^ blocks, super blockSpecs! !!ScratchStageMorph methodsFor: 'initialization' stamp: 'EiichiroIto 8/1/2018 19:19'!initialize	super initialize.	color _ Color white.	self enableDragNDrop: true.	objName _ 'Stage' localized.	costume _ self defaultImageMedia.	media _ OrderedCollection with: costume with: SoundMedia new.	zoom _ 1.0.	hPan _ 0.	vPan _ 0.	runningBlocks _ OrderedCollection new.	inProcessStep _ false.	sensorBoard _ SensorBoardMorph new.	midiPortNum _ -1.	notePlayerDict _ Dictionary new.	obsoleteSavedState _ nil.	sprites _ OrderedCollection new.	showMotorBlocks _ false.	console := ScratchConsoleMorph new.! !!ScratchStageMorph methodsFor: 'menus' stamp: 'EiichiroIto 8/1/2018 19:19'!rightButtonMenu	"Present the right button menu."	| menu |	menu _ CustomMenu new.	menu add: 'show console' action: #showConsole.	menu add: 'grab screen region for new sprite' action: #grabSpriteFromScreen.	menu addLine.	menu add: 'save picture of stage...' action: #stageShot.	menu localize; invokeOn: self.! !!ScratchStageMorph methodsFor: 'kodo' stamp: 'EiichiroIto 8/1/2018 19:19'!appendConsole: aString	console append: aString asString.! !!ScratchStageMorph methodsFor: 'kodo' stamp: 'EiichiroIto 8/1/2018 19:19'!clearConsole	console clear.! !!ScratchStageMorph methodsFor: 'kodo' stamp: 'EiichiroIto 7/28/2018 15:28'!console	^ console! !!ScratchStageMorph methodsFor: 'kodo' stamp: 'EiichiroIto 7/28/2018 19:07'!hideConsole	console delete.! !!ScratchStageMorph methodsFor: 'kodo' stamp: 'EiichiroIto 8/1/2018 19:19'!newLineConsole	console newLine.! !!ScratchStageMorph methodsFor: 'kodo' stamp: 'EiichiroIto 7/28/2018 15:30'!showConsole	console position: self position + 20.	self addMorph: console.	World startSteppingSubmorphsOf: console.! !!ScratchStageMorph class methodsFor: 'block specs' stamp: 'EiichiroIto 8/1/2018 19:19'!blockSpecs	| blocks |	blocks _ #(		'sensing'			('ask %s and wait'			s	doAsk 'What''s your name?')			('answer'					r	answer)			-			('mouse x'					r	mouseX)			('mouse y'					r	mouseY)			('mouse down?'				b	mousePressed)			-			('key %k pressed?'			b	keyPressed: 'space')			-			('reset timer'				-	timerReset)			('timer'						r	timer)			-			('%a of %m'					r	getAttribute:of:)			-			('loudness'					r	soundLevel)			('loud?'						b	isLoud)			~			('%H sensor value'			r	sensor: 'slider')			('sensor %h?'				b	sensorPressed: 'button pressed')		'looks'			('switch to background %l'	-	showBackground: 'background1')			('next background'			-	nextBackground)			('background #'				r	backgroundIndex)			-			('change %g effect by %n'	-	changeGraphicEffect:by: 'color' 25)			('set %g effect to %n'		-	setGraphicEffect:to: 'color' 0)			('clear graphic effects'		-	filterReset)			-			('append %s to console'			-	appendConsole: 'abc')			('newline'						- newLineConsole)			('clear console'			-	clearConsole)			('show console'				- showConsole)			('hide console'				- hideConsole)		'pen'			('clear'						-	clearPenTrails)	).	^ blocks, super blockSpecs! !!ScratchTabPaneMorph methodsFor: 'private' stamp: 'EiichiroIto 8/1/2018 19:19'!lightUpCurrentTab	(self submorphs) do: [:m |		(m isKindOf: ResizableToggleButton2) ifTrue: [			m arguments first = currentTab				ifTrue: [m setLabelColor: ScratchFrameMorph labelOnColor; on; comeToFront]				ifFalse: [m setLabelColor: ScratchFrameMorph labelOffColor; off]]].! !!ScratchTheme methodsFor: 'initialization' stamp: 'EiichiroIto 7/29/2018 11:57'!initialize	colors := Dictionary new.	forms := Dictionary new.! !!ScratchTheme methodsFor: 'accessing' stamp: 'EiichiroIto 8/1/2018 19:19'!colorAt: aSymbol	^ colors at: aSymbol asSymbol! !!ScratchTheme methodsFor: 'accessing' stamp: 'EiichiroIto 8/1/2018 19:19'!colorAt: aSymbol put: aColor	colors at: aSymbol asSymbol put: aColor! !!ScratchTheme methodsFor: 'accessing' stamp: 'EiichiroIto 8/1/2018 19:19'!formAt: aSymbol	^ forms at: aSymbol asSymbol! !!ScratchTheme methodsFor: 'accessing' stamp: 'EiichiroIto 8/1/2018 19:19'!formAt: aSymbol ifAbsent: aBlock	^ forms at: aSymbol asSymbol ifAbsent: aBlock! !!ScratchTheme methodsFor: 'accessing' stamp: 'EiichiroIto 8/1/2018 19:19'!formAt: aSymbol put: aForm	forms at: aSymbol asSymbol put: aForm! !!ScratchTheme methodsFor: 'private' stamp: 'EiichiroIto 7/29/2018 11:59'!colors	^ colors copy! !!ScratchTheme methodsFor: 'private' stamp: 'EiichiroIto 7/29/2018 11:59'!forms	^ forms copy! !!ScratchTheme methodsFor: 'file read' stamp: 'EiichiroIto 8/1/2018 19:19'!readFormsFrom: aDirectory	| img i |	aDirectory fileNames do: [:fn |		Cursor read showWhile: [			img := [Form fromFileNamed: (aDirectory fullNameFor: fn)] ifError: [nil]].		img ifNotNil: [			i := fn findLast: [:c | c = $.].			i = 0 ifFalse: [fn := fn copyFrom: 1 to: i - 1].			self formAt: fn asSymbol put: img]].! !!ScratchTheme class methodsFor: 'instance creation' stamp: 'EiichiroIto 8/1/2018 19:19'!buildDarkTheme	| obj |	obj := ScratchTheme new.	self readForms: 'darkTheme' to: obj.	obj colorAt: #blockArgColor put: (Color gray: 0.2).	obj colorAt: #categoryOnColor put: Color black.	obj colorAt: #categoryOffColor put: (Color gray: 0.8).	obj colorAt: #dialogBoxTextColor put: (Color gray: 0.8).	obj colorAt: #dialogBoxTitleColor put: (Color gray: 0.4).	obj colorAt: #fieldColor put: (Color gray: 0.2).	obj colorAt: #folderHighlightColor put: (Color r: (96/255) g: (136/255) b: (182/255)).	obj colorAt: #labelOnColor put: Color black.	obj colorAt: #labelOffColor put: (Color gray: 0.8).	obj colorAt: #libraryColor put: (Color gray: 0.2).	obj colorAt: #listColor put: (Color r: (193/255) g: (196/255) b: (199/255)).	obj colorAt: #menuNormalColor put: (Color gray: 0.8).	obj colorAt: #menuHighlightColor put: Color white.	obj colorAt: #palettePaneColor put: (Color gray: 0.2).	obj colorAt: #readoutColor put: (Color gray: 0.2).	obj colorAt: #scriptsPaneColor put: (Color gray: 0.2).	obj colorAt: #sensorBoardColor put: (Color r: (193/255) g: (196/255) b: (199/255)).	obj colorAt: #textColor put: (Color gray: 0.8).	obj colorAt: #textSelectionColor put: (Color r: 0.353 g: 0.607 b: 0.788).	obj colorAt: #thumbnailDirectionColor put: (Color gray: 0.8).	obj colorAt: #viewerPaneColor put: (Color gray: 0.2).	obj colorAt: #watcherColor put: (Color r: (193/255) g: (196/255) b: (199/255)).	obj colorAt: #watcherBorderColor put: (Color r: (148/255) g: (145/255) b: (145/255)).	^ obj! !!ScratchTheme class methodsFor: 'instance creation' stamp: 'EiichiroIto 8/1/2018 19:19'!buildScratch14Theme	| obj |	obj := ScratchTheme new.	self readForms: 'scratch14Theme' to: obj.	obj colorAt: #blockArgColor put: (Color gray: 0.95).	obj colorAt: #categoryOnColor put: Color white.	obj colorAt: #categoryOffColor put: Color white.	obj colorAt: #dialogBoxTextColor put: Color black.	obj colorAt: #dialogBoxTitleColor put: Color white.	obj colorAt: #fieldColor put: (Color r: (211/255) g: (214/255) b: (216/255)).	obj colorAt: #folderHighlightColor put: (Color r: (96/255) g: (136/255) b: (182/255)).	obj colorAt: #labelOnColor put: Color black.	obj colorAt: #labelOffColor put: (Color r: (78/255) g: (82/255) b: (82/255)).	obj colorAt: #libraryColor put: Color gray.	obj colorAt: #listColor put: (Color r: (193/255) g: (196/255) b: (199/255)).	obj colorAt: #menuNormalColor put: (Color gray: 0.3).	obj colorAt: #menuHighlightColor put: Color white.	obj colorAt: #palettePaneColor put: (Color r: 124 g: 128 b: 131 range: 255).	obj colorAt: #readoutColor put: (Color r: 0.753 g: 0.764 b: 0.776).	obj colorAt: #scriptsPaneColor put: (Color r: (149/255) g: (154/255) b: (159/255)).	obj colorAt: #sensorBoardColor put: (Color r: (193/255) g: (196/255) b: (199/255)).	obj colorAt: #textColor put: Color white.	obj colorAt: #textSelectionColor put: (Color r: 0.353 g: 0.607 b: 0.788).	obj colorAt: #thumbnailDirectionColor put: Color blue.	obj colorAt: #viewerPaneColor put: (Color r: 0.584 g: 0.603 b: 0.623).	obj colorAt: #watcherColor put: (Color r: (193/255) g: (196/255) b: (199/255)).	obj colorAt: #watcherBorderColor put: (Color r: (148/255) g: (145/255) b: (145/255)).	^ obj! !!ScratchTheme class methodsFor: 'instance creation' stamp: 'EiichiroIto 8/1/2018 19:19'!buildScratch30Theme	| obj |	obj := ScratchTheme new.	self readForms: 'scratch30Theme' to: obj.	obj colorAt: #blockArgColor put: (Color gray: 0.95).	obj colorAt: #categoryOnColor put: Color black.	obj colorAt: #categoryOffColor put: (Color r: (78/255) g: (82/255) b: (82/255)).	obj colorAt: #dialogBoxTextColor put: Color black.	obj colorAt: #dialogBoxTitleColor put: Color white.	obj colorAt: #fieldColor put: Color white.	obj colorAt: #folderHighlightColor put: (Color fromString: '#4c97ff').	obj colorAt: #labelOnColor put: Color black.	obj colorAt: #labelOffColor put: (Color r: (78/255) g: (82/255) b: (82/255)).	obj colorAt: #libraryColor put: Color white.	obj colorAt: #listColor put: Color white.	obj colorAt: #menuNormalColor put: Color white.	obj colorAt: #menuHighlightColor put: (Color gray: 0.3).	obj colorAt: #palettePaneColor put: Color white.	obj colorAt: #readoutColor put: Color white.	obj colorAt: #scriptsPaneColor put: Color white.	obj colorAt: #sensorBoardColor put: Color white.	obj colorAt: #textColor put: Color black.	obj colorAt: #textSelectionColor put: Color green.	obj colorAt: #thumbnailDirectionColor put: Color blue.	obj colorAt: #viewerPaneColor put: Color white.	obj colorAt: #watcherColor put: Color white.	obj colorAt: #watcherBorderColor put: Color black.	^ obj! !!ScratchTheme class methodsFor: 'accessing' stamp: 'EiichiroIto 7/29/2018 12:13'!changeTheme: aSymbol	CurrentTheme := AvailableThemes at: aSymbol! !!ScratchTheme class methodsFor: 'accessing' stamp: 'EiichiroIto 7/29/2018 16:03'!colorAt: aSymbol	^ self current colorAt: aSymbol! !!ScratchTheme class methodsFor: 'accessing' stamp: 'EiichiroIto 7/29/2018 12:34'!current	^ CurrentTheme! !!ScratchTheme class methodsFor: 'accessing' stamp: 'EiichiroIto 7/29/2018 15:56'!formAt: aString ifAbsent: aBlock	^ self current formAt: aString ifAbsent: aBlock! !!ScratchTheme class methodsFor: 'accessing' stamp: 'EiichiroIto 7/29/2018 12:14'!themeNames	^ AvailableThemes keys! !!ScratchTheme class methodsFor: 'initialization' stamp: 'EiichiroIto 8/1/2018 19:19'!initialize	"ScratchTheme initialize."	| dict |	dict := Dictionary new.	dict at: #scratch14Theme put: self buildScratch14Theme.	dict at: #scratch30Theme put: self buildScratch30Theme.	dict at: #darkTheme put: self buildDarkTheme.	AvailableThemes := dict.	self changeTheme: #scratch30Theme.! !!ScratchTheme class methodsFor: 'private' stamp: 'EiichiroIto 8/1/2018 19:19'!readForms: aString to: aTheme 	| base dir |	(FileDirectory default directoryExists: 'Themes')		ifFalse: [self error: 'Themes directory not found'].	base := FileDirectory default directoryNamed: 'Themes'.	(base directoryExists: 'common')		ifFalse: [self error: 'common directory not found'].	dir := base directoryNamed: 'common'.	aTheme readFormsFrom: dir.	(base directoryExists: aString)		ifFalse: [self error: aString , ' directory not found'].	dir := base directoryNamed: aString.	aTheme readFormsFrom: dir.! !!ScratchTheme class methodsFor: 'private' stamp: 'EiichiroIto 7/29/2018 18:00'!updateDarkTheme	"ScratchTheme updateDarkTheme."	AvailableThemes at: #darkTheme put: self buildDarkTheme.	self changeTheme: #darkTheme.! !!ScratchThumbnailMorph methodsFor: 'drawing' stamp: 'EiichiroIto 8/1/2018 19:19'!drawOn: aCanvas	| offset |	super drawOn: aCanvas.	(target respondsTo: #rotationDegrees:) ifFalse: [^ self].  "nil or background"	showDirection ifTrue: [		offset _ Point r: (self width / 2) - 1 degrees: target rotationDegrees.		aCanvas line: self center to: self center + offset width: 1 color: ScratchFrameMorph thumbnailDirectionColor].! !!ScratchViewerMorph methodsFor: 'initialization' stamp: 'EiichiroIto 8/1/2018 19:19'!initialize	super initialize.	self		initFrontFromForm: (ScratchFrameMorph skinAt: #blocksPaletteFrameTransparent2)		topSectionHeight: 120.	self middleBarLeftMargin: 5 rightMargin: 0.	color _ ScratchFrameMorph viewerPaneColor.	pageViewer _ ScrollFrameMorph2 new growthFraction: 0.1.	self addMorphBack: (pageViewer position: self position + (0@120)).	self target: nil.	self extent: 214@500.! !!ScratchViewerMorph methodsFor: 'initialization' stamp: 'EiichiroIto 8/1/2018 19:19'!rebuildCategorySelectors	| catList maxExtent buttons label offForm onForm overForm b pad leftColumnX rightColumnX x y |	catList _ #(		motion		control		looks		sensing		sound		operators		pen			variables).	"First, delete the old category buttons"	submorphs do: [:m | (m isKindOf: ResizableToggleButton2) ifTrue: [m delete]].	"Create new buttons, keeping track of the maximum extent."	maxExtent _ 75@0.	buttons _ catList collect: [:cat |		label _ (ScratchTranslator translationFor: cat asString) capitalized.		offForm _ (ScratchFrameMorph skinAt: cat).		onForm _ (ScratchFrameMorph skinAt: (cat, 'Pressed')).		overForm _ (ScratchFrameMorph skinAt: (cat, 'Over')).		ScratchTranslator isRTL			ifTrue:[				b _ ResizableToggleButton2 new					offForm:	(offForm flipBy: #horizontal centerAt: offForm center)					onForm:		(onForm flipBy: #horizontal centerAt: onForm center)					overForm:	(overForm flipBy: #horizontal centerAt: overForm center)]			ifFalse:[				b _ ResizableToggleButton2 new					offForm:	offForm					onForm:		onForm					overForm:	overForm].		b			label: label font: (ScratchFrameMorph getFont: #Category);			"setLabelColor: ScratchFrameMorph textColor;"			labelColorOn: ScratchFrameMorph categoryOnColor labelColorOff: ScratchFrameMorph categoryOffColor labelColorOver: ScratchFrameMorph categoryOffColor;			target: self;			actionSelector: #currentCategory:;			arguments: (Array with: cat);			toggleButtonMode: true;			toggleMode: false.		ScratchTranslator isRTL			ifTrue:[b rightJustifyInset: 10]			ifFalse:[b leftJustifyInset: 10].		maxExtent _ maxExtent max: (b extent + (3 @ -6)).		b].	"calculate catButtonsExtent"	pad _ 15. "padding on left, right, and betwen the button columns"	catButtonsExtent _ ((2 * maxExtent x) + (3 * pad)) @ (((catList size // 2) * (maxExtent y + 6)) + 25).	"place the buttons"	leftColumnX _ self left + 12 + pad.	rightColumnX _ leftColumnX + maxExtent x + pad.	x _ leftColumnX.	y _ self top + 17.	1 to: buttons size do: [:i |		b _ buttons at: i.		b extent: maxExtent.		self addMorph: (b position: x@y).		i even			ifTrue: [x _ leftColumnX. y _ y + b height + 6]			ifFalse: [x _ rightColumnX]].	self width: catButtonsExtent x.	pageViewer position: self position + (0@catButtonsExtent y).	topSectionHeight _ catButtonsExtent y - 4.! !!ScrollingStringMorph methodsFor: 'kodo' stamp: 'EiichiroIto 8/1/2018 19:19'!append: aString	self moveCursorPageEnd.	self insertString: aString.! !!ScrollingStringMorph methodsFor: 'kodo' stamp: 'EiichiroIto 8/1/2018 19:19'!clear	lines := Array with: self emptyLine.! !!ScrollingStringMorph methodsFor: 'kodo' stamp: 'EiichiroIto 7/28/2018 16:03'!moveCursorPageEnd	| lastLine |	lastLine := lines at: lines size.	selectionEnd := (self startOfLine: lines size) + lastLine size + 1.	selectionStart := selectionEnd. self ensureCursorIsOnScreen.	startLoc := selectionStart.	self changed.! !!ScrollingStringMorph methodsFor: 'kodo' stamp: 'EiichiroIto 7/28/2018 15:51'!newLine	self insertString: (UTF32 with: 13).! !!SensorBoardMorph methodsFor: 'initialization' stamp: 'EiichiroIto 8/1/2018 19:19'!addReadouts	| readoutNames |	readoutNames _ #(		slider		light		sound		button		A		B		C		D	).	column _ AlignmentMorph newColumn		centering: #center;		hResizing: #spaceFill;		vResizing: #shrinkWrap;		color: ScratchFrameMorph sensorBoardColor;		borderWidth: 2;		borderColor: (Color r: (148/255) g: (145/255) b: (145/255));		useRoundedCorners;		inset: 3.	titleMorph _ StringMorph		contents: ''		font: (StrikeFont fontName: 'VerdanaBold' size: 10).	column addMorph: titleMorph.	self updateTitle.	column addMorphBack: (Morph new color: column color; extent: 5@3).  "spacer"	self removeAllMorphs.	readouts _ readoutNames collect: [:i |		(i size = 1)			ifTrue:[self addReadoutLabeled: i]			ifFalse:[self addReadoutLabeled: i localized]].	column position: self position - 2.	self addMorph: column.	self extent: column extent - 4.! !!ShadowedStringMorph methodsFor: 'accessing' stamp: 'EiichiroIto 8/1/2018 19:19'!contents: aString color: aColor font: aFont kern: aNumber	mainMorph _ StringMorph new		contents: aString;		color: aColor;		font: aFont;		kern: aNumber.	shadowMorph _ StringMorph new		contents: aString;		color: (Color black mixed: 0.2 with: aColor);		font: aFont;		kern: aNumber.	self		addMorphBack: (mainMorph position: self position);		addMorphBack: (shadowMorph position: (self position + (2@1))).	self extent: (mainMorph extent + (2@1)).! !!StringFieldMorph methodsFor: 'initialization' stamp: 'EiichiroIto 8/1/2018 19:19'!initialize	super initialize.	stringMorph _ StringMorph new		contents: UTF32 new font: (StrikeFont fontName: 'Verdana' size: 12);		forceUnicodeRendering: true.	self addMorph: stringMorph.	color _ ScratchFrameMorph fieldColor.	self textColor: ScratchFrameMorph dialogBoxTextColor.	doResizing _ false.	isNumeric _ false.	isEditable _ true.	isKeyboardFocus _ false.	acceptWhenFocusLost _ false.	self keyboardFocusChange: false.	selectionColor _ ScratchFrameMorph textSelectionColor.	selectionStart _ selectionEnd _ 0.	self recordUndoState.	self rightJustify: ScratchTranslator isRTL.	self borderInset; useNoFrame.	self width: 100.! !!WatcherMorph methodsFor: 'initialization' stamp: 'EiichiroIto 8/1/2018 19:19'!initialize	super initialize.	titleMorph _ StringMorph contents: '???'.	titleMorph font: (ScratchFrameMorph getFont: #Watcher).	readout _ readoutFrame _ scratchSlider _ nil.	lastTargetName _ nil.	isSpriteSpecific _ true.	isLarge _ false.	sliderMin _ 0.	sliderMax _ 100.	watcher _ AlignmentMorph new		color: Color transparent;		borderWidth: 0;		inset: 0;		orientation: #horizontal;		hResizing: #shrinkWrap;		vResizing: #shrinkWrap;		centering: #center.	self 		color: ScratchFrameMorph watcherColor;		borderWidth: 1;		borderColor: ScratchFrameMorph watcherBorderColor;		orientation: #vertical;		centering: #center;		inset: 2;		hResizing: #shrinkWrap;		vResizing: #shrinkWrap;		buildReadout;		useRoundedCorners;		addMorphBack: watcher;		addMorphBack: (Morph new color: Color transparent; extent: 5@1).! !!WatcherMorph methodsFor: 'right button menu' stamp: 'EiichiroIto 8/1/2018 19:19'!showSmallReadout	self hideSlider.	isLarge _ false.	readout font: (ScratchFrameMorph getFont: #Watcher).	readoutFrame		borderColor: Color white;		fixLayout.	self		inset: 2;		color: ScratchFrameMorph watcherColor;		borderColor: ScratchFrameMorph watcherBorderColor;		cornerStyle: #rounded.	self layoutForViewer.! !ScratchTheme initialize!ScratchTheme class removeSelector: #scratch30Theme!!ScratchTheme class reorganize!('instance creation' buildDarkTheme buildScratch14Theme buildScratch30Theme)('accessing' changeTheme: colorAt: current formAt:ifAbsent: themeNames)('initialization' initialize)('private' readForms:to: updateDarkTheme)!!ScratchStageMorph reorganize!('initialization' initialize)('accessing' adjustedCursorPoint copyForExport costumeChanged defaultImageMedia isQuarterSize isQuarterSize: objName rotationCenter scratchServer scratchServer: sensorBoard sensorBoard: showMotorBlocks showMotorBlocks: sprites updateSpritesList)('looks ops' backgroundIndex changeBackgroundIndexBy: changeHPanBy: changeVPanBy: changeZoomBy: lookLike: makeVisible newScene nextBackground rerecordScene sceneNames setHPanTo: setVPanTo: setZoomTo: showBackground: showScene:)('sensing ops' attributeNames getAttribute:)('sound ops' setTempoTo: tempo)('event handling' containsPoint: fullContainsPoint: grabSpriteFromScreen mouseDown: stageShot startDrag: transformFrom: unlockedMorphsAt:addTo:)('dropping/grabbing' acceptDroppingMorph:event: rootForGrabOf:)('drawing' drawOn: drawQuarterSizeOn: drawSubmorphsOn: exportFileName: fullBounds fullDrawOn: incrRedraw: invalidRect: patchAt:withoutWatchersAnd:andNothingAbove: previewForm stageShotForm stageShotSized: thumbnailForm updateStageDisplay)('scratch processes/events' allEventNames broadcastEventNamed:with: defaultEventName processesToRun removeTerminatedProcesses startProcessFor: stepProcesses stepProcessesTurbo stopAll stopAllProcesses stopAllSounds stopAsks)('clones' allClones deleteAllClones deleteTerminatedClones)('midi' closeMIDI midiAllNotesOff midiPortNum midiPortNum: notePlayerFor: openMIDI tryToOpenMidiPort)('pen support' clearPenTrails createOrResizeTrailsForm drawPenTrailFor:from:to: penTrailsForm penTrailsForm: penUpOrDownChangeFor: stampCostume: updatePenPositionFor: updateTrailsForm)('object i/o' fieldsVersion initFieldsFrom:version: storeFieldsOn:)('menus' rightButtonMenu)('media' savePhoto:)('kodo' appendConsole: clearConsole console hideConsole newLineConsole showConsole)!ScratchFrameMorph class removeSelector: #readLogo!ScratchFrameMorph class removeSelector: #readSkinAt:from:!ScratchFrameMorph class removeSelector: #skinAt:put:!ScratchFrameMorph removeSelector: #showConsole!!ScratchFrameMorph reorganize!('intialization' addShortcutButtonsTo: createBasicPanes createLogo createMenuPanel createReadoutPane createStageButtonsPanel createToolbar createViewModeButtonsPanel initialize makeXYReadout)('accessing' author author: importSpriteOrProject: libraryPane loginName loginName: loginPassword loginPassword: paintingInProgress paintingInProgress: projectComment projectCommentOrTemplate projectInfo projectName projectName: scratchObjects scriptsPane viewMode viewerPane workPane)('menu/button actions' aboutScratch addServerCommandsTo: addSpriteMorph allProjectMedia canonicalizeImagesQuality:saveOriginal: canonicalizeSoundsBits:saveOriginal: compressImages compressSounds developersMenu editMenu: editNotes enableRemoteSensors exitScratchSession exportSprite fileMenu: fillScreenOff fillScreenOn getLoginName helpMenu: hideMotorBlocks joinScratchSession languageMenu: launchAllHelpScreens launchHelpFile: launchHelpPage newScratchProject paintSpriteMorph pressGreenFlagButton quitScratch renderingMenu resaveAllProjects saveImageForEndUser setSingleStepping shareMenu: shoutGo showMotorBlocks showNetworkAddress showSensorBoard startHostingScratchSession stopAll surpriseSpriteMorph toggleErrorCatcher toggleSingleStepping uniqueSummaryFileName writeMultipleSummaries writeSummaryFile writeSummaryFile: writeSummaryTotalsOn:)('geometry' extent: fixLayout hidePalette:)('drawing' areasRemainingToFill: drawOn: fullDrawOn:)('event handling' handlesMouseDown: mouseDown: wantsKeyboardFocusFor:)('stepping' checkForWeDo processDroppedFiles processKeyboardEvents processWhenConditions step stepTime updateToolButtons)('dropping/grabbing' wantsDroppedMorph:event:)('view mode' closeDialogBoxes enterNormalMode enterPresentationMode enterQuarterMode exitPresentationMode projectComment: updatePenPositions updateViewModeButtons)('other' addAndView: closeMediaEditorsAndDialogs delete mouseX mouseY newSound openMIDI presentHelpScreen: projectDirectory projectModified updateMediaCategoryFor: view:tab:category:)('startup' processSettingsFile readDefaultNotes readSettingsFile setDefaultSprite startup)('file read/write' clearStage extractInfoFrom: extractProjectFrom: fixByteReversedSounds importScratchProject installNewProject: nameFromFileName: openScratchDroppedProjectNamed: openScratchProject openScratchProjectNamed: saveScratchProject saveScratchProjectNoDialog storeProjectInfoOn: updateHistoryProjectName:op: updateLastHistoryEntryIfNeeded writeScratchProject writeScratchProjectOld)('uploading' allBlocksString compressMediaForUpload printTupleElement:on: printTupleList:on: removeLastHistoryEntry revertToUncompressedMedia scriptsStringForUpload writeScratchProjectOn:)('watchers' deleteWatchersForSprite: deleteWatchersForVar:ofSprite: deletingWatcher initializeWatcherPositions listWatchers scratchWatchers showWatcher: unusedPositionForWatcher watcherForBlock: watcherShowingFor:selectorAndArg:)('tools (no longer used)' copyTool cutTool normalTool undoTool zoomInTool zoomOutTool)('private' enterQuarterModeIfSmallScreen fixProjectTitleMorphLayout nextSurpriseCostumeName projectIsEmpty rebuildUIForNewLanguage recordLanguage: setLanguage: updatePanes updateProjectName)('kodo' changeTheme processThemeSetting recordTheme:)!!ScratchConsoleMorph reorganize!('initialization' addMorphs initialize)('dropping/grabbing' justDroppedInto:event:)('accessing' append: clear newLine)('event handling' handlesMouseDown: mouseDown: mouseHold: rightButtonMenu)!MediaItemMorph initialize.PaintFrame resetClassVariables.ObjStream initialize.ScriptableScratchMorph buildBlockSpecDictionary.ScratchTheme initialize.!